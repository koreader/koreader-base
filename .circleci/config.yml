version: 2

workflows:
  version: 2
  lint_build_test:
    jobs:
      - lint
      - emu_gcc_ninja:
          filters:
            branches:
              only: master
          requires:
            - lint
      - emu_gcc_ninja_debug:
          requires:
            - lint
      - emu_gcc_make:
          filters:
            branches:
              only: master
          requires:
            - lint
      - emu_clang_ninja:
          requires:
            - lint
      - kindle:
          requires:
            - emu_gcc_ninja_debug
      - kobo:
          requires:
            - emu_gcc_ninja_debug
      - pocketbook:
          requires:
            - emu_gcc_ninja_debug
      - sony-prstux:
          requires:
            - emu_gcc_ninja_debug
      - cervantes:
          requires:
            - emu_gcc_ninja_debug
      - android-arm:
          requires:
            - emu_gcc_ninja_debug
      - android-x86:
          filters:
            branches:
              only: master
          requires:
            - emu_gcc_ninja_debug


jobs:
  lint:
    docker:
      - image: koreader/kobase:0.3.1-20.04
    environment:
      BASH_ENV: "~/.bashrc"
    steps:
      - checkout
      - run:
          name: lint
          command: |
            source .ci/lint_script.sh

  emu: &EMU_TPL
    docker:
      - image: koreader/kobase:0.3.1-20.04
    environment: &EMU_ENV_LST
      BASH_ENV: "~/.bashrc"
      EMULATE_READER: "1"
      CC: "gcc"
    steps:
      - checkout

      - restore_cache:
          keys:
            - "{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-"
            - "master-{{ .Environment.CIRCLE_JOB }}-"

      - run:
          name: build
          command: |
            source .ci/build_script.sh

      - save_cache:
          key: "{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}"
          paths:
            - "/home/ko/.ccache"

      - run:
          name: test
          command: |
            source .ci/test_script.sh

  emu_gcc_ninja:
    <<: *EMU_TPL

  emu_gcc_ninja_debug:
    <<: *EMU_TPL
    environment:
      <<: *EMU_ENV_LST
      KODEBUG: "1"

  emu_gcc_make:
    <<: *EMU_TPL
    environment:
      <<: *EMU_ENV_LST
      USE_MAKE: "1"

  emu_clang_ninja:
    <<: *EMU_TPL
    docker:
      # FIXME: need to update glib before an update
      # to `kobase-clang:0.3.1-20.04` is possible.
      - image: koreader/kobase-clang:0.3.0
    environment:
      <<: *EMU_ENV_LST
      CC: "clang"
      CXX: "clang++"



  xcompile: &XCOMPILE_TPL
    machine: true
    steps:
      - checkout

      - restore_cache:
          keys:
            - "{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-"
            - "master-{{ .Environment.CIRCLE_JOB }}-"

      - run:
          name: build
          command: |
            source .ci/build_script.sh

      - save_cache:
          key: "{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}"
          paths:
            - "/home/circleci/.ccache"

      - run:
          name: test
          command: |
            source .ci/test_script.sh

  kindle:
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "kindle"
      DOCKER_IMG: koreader/kokindle:0.3.1-20.04

  kobo:
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "kobo"
      DOCKER_IMG: koreader/kokobo:0.3.1-20.04

  pocketbook:
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "pocketbook"
      DOCKER_IMG: koreader/kopb:0.4.0-20.04

  sony-prstux:
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "sony-prstux"
      DOCKER_IMG: koreader/kobase-22.04:0.3.0

  cervantes:
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "cervantes"
      DOCKER_IMG: koreader/kocervantes:0.3.1-20.04

  android-arm: &ANDROID_TPL
    <<: *XCOMPILE_TPL
    environment:
      TARGET: "android"
      DOCKER_IMG: koreader/koandroid:0.7.0-20.04

  android-x86:
    <<: *ANDROID_TPL
    environment:
      TARGET: "android"
      ANDROID_ARCH: "x86"
      DOCKER_IMG: koreader/koandroid:0.7.0-20.04

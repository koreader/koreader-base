--- i/glib/meson.build
+++ w/glib/meson.build
@@ -287,6 +287,8 @@ pkg.generate(libraries : [libglib, libintl],
   description : 'C Utility Library',
 )
 
+if false
+
 # On Windows, glib needs a spawn helper for g_spawn* API
 if host_system == 'windows'
   if host_machine.cpu_family() == 'x86'
@@ -330,6 +332,8 @@ configure_file(
   install_mode: 'rwxr-xr-x'
 )
 
+endif
+
 install_data('glib_gdb.py', install_dir : join_paths(glib_pkgdatadir, 'gdb'))
 
 gdb_conf = configuration_data()
@@ -359,4 +363,4 @@ if enable_systemtap
     install : true)
 endif
 
-subdir('tests')
+# subdir('tests')
--- i/meson.build
+++ w/meson.build
@@ -1747,10 +1747,11 @@ if host_system == 'windows'
 endif
 
 libm = cc.find_library('m', required : false)
-libffi_dep = dependency('libffi', version : '>= 3.0.0', fallback : ['libffi', 'ffi_dep'])
+# libffi_dep = dependency('libffi', version : '>= 3.0.0', fallback : ['libffi', 'ffi_dep'])
 
 # Don't use the bundled ZLib sources until we are sure that we can't find it on
 # the system
+if false
 libz_dep = dependency('zlib', required : false)
 if not libz_dep.found()
   if cc.get_id() != 'msvc'
@@ -1766,6 +1767,7 @@ endif
 if not libz_dep.found()
   libz_dep = subproject('zlib').get_variable('zlib_dep')
 endif
+endif
 
 # First check in libc, fallback to libintl, and as last chance build
 # proxy-libintl subproject.
@@ -1967,14 +1969,14 @@ test_timeout_slow = 120
 pkg = import('pkgconfig')
 windows = import('windows')
 subdir('glib')
-subdir('gobject')
-subdir('gthread')
-subdir('gmodule')
-subdir('gio')
+# subdir('gobject')
+# subdir('gthread')
+# subdir('gmodule')
+# subdir('gio')
 if xgettext.found()
-  subdir('po')
+  # subdir('po')
 endif
-subdir('tests')
+# subdir('tests')
 
 # Install glib-gettextize executable, if a UNIX-style shell is found
 if have_sh
@@ -1992,10 +1994,6 @@ if have_sh
     configuration : gettextize_conf)
 endif
 
-# Install m4 macros that other projects use
-install_data('m4macros/glib-2.0.m4', 'm4macros/glib-gettext.m4', 'm4macros/gsettings.m4',
-  install_dir : join_paths(get_option('datadir'), 'aclocal'))
-
 if host_system != 'windows'
   # Install Valgrind suppression file (except on Windows,
   # as Valgrind is currently not supported on Windows)
@@ -2027,6 +2025,6 @@ if get_option('man')
 endif
 
 gnome = import('gnome')
-subdir('docs/reference/glib')
-subdir('docs/reference/gobject')
-subdir('docs/reference/gio')
+# subdir('docs/reference/glib')
+# subdir('docs/reference/gobject')
+# subdir('docs/reference/gio')

--- i/src/svr-authpubkey.c
+++ w/src/svr-authpubkey.c
@@ -546,23 +546,7 @@ static int checkpubkeyperms() {
 
 	TRACE(("enter checkpubkeyperms"))
 
-	/* Walk back up path checking permissions, stopping at either homedir,
-	 * or root if the path is outside of the homedir. */
-	while ((sep = strrchr(path, '/')) != NULL) {
-		if (sep == path) {	/* root directory */
-			sep++;
-		}
-		*sep = '\0';
-		if (checkfileperm(path) != DROPBEAR_SUCCESS) {
-			TRACE(("checkpubkeyperms: bad perm on %s", path))
-			ret = DROPBEAR_FAILURE;
-		}
-		if (strcmp(path, ses.authstate.pw_dir) == 0 || strcmp(path, "/") == 0) {
-			break;
-		}
-	}
-
-	/* all looks ok, return success */
+	ret = checkfileperm(path);
 	m_free(path);
 
 	TRACE(("leave checkpubkeyperms"))
@@ -574,7 +558,6 @@ static int checkpubkeyperms() {
 /* returns DROPBEAR_SUCCESS or DROPBEAR_FAILURE */
 static int checkfileperm(char * filename) {
 	struct stat filestat;
-	int badperm = 0;
 
 	TRACE(("enter checkfileperm(%s)", filename))
 
@@ -582,25 +565,6 @@ static int checkfileperm(char * filename) {
 		TRACE(("leave checkfileperm: stat() != 0"))
 		return DROPBEAR_FAILURE;
 	}
-	/* check ownership - user or root only*/
-	if (filestat.st_uid != ses.authstate.pw_uid
-			&& filestat.st_uid != 0) {
-		badperm = 1;
-		TRACE(("wrong ownership"))
-	}
-	/* check permissions - don't want group or others +w */
-	if (filestat.st_mode & (S_IWGRP | S_IWOTH)) {
-		badperm = 1;
-		TRACE(("wrong perms"))
-	}
-	if (badperm) {
-		if (!ses.authstate.perm_warn) {
-			ses.authstate.perm_warn = 1;
-			dropbear_log(LOG_INFO, "%s must be owned by user or root, and not writable by group or others", filename);
-		}
-		TRACE(("leave checkfileperm: failure perms/owner"))
-		return DROPBEAR_FAILURE;
-	}
 
 	TRACE(("leave checkfileperm: success"))
 	return DROPBEAR_SUCCESS;
--- i/src/svr-runopts.c
+++ w/src/svr-runopts.c
@@ -177,7 +177,7 @@ void svr_getopts(int argc, char ** argv) {
 	svr_opts.hostkey = NULL;
 	svr_opts.delay_hostkey = 0;
 	svr_opts.pidfile = expand_homedir_path(DROPBEAR_PIDFILE);
-	svr_opts.authorized_keys_dir = "~/.ssh";
+	svr_opts.authorized_keys_dir = "settings/SSH";
 	svr_opts.nopasschk = 0;
 #if DROPBEAR_SVR_LOCALANYFWD
 	svr_opts.nolocaltcp = 0;

--- i/CMakeLists.txt
+++ w/CMakeLists.txt
@@ -8,7 +8,7 @@
 #
 # ##############################################################################
 
-cmake_minimum_required(VERSION 3.10 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.15 FATAL_ERROR)
 
 # In-source builds are disabled.
 if("${CMAKE_CURRENT_SOURCE_DIR}" STREQUAL "${CMAKE_CURRENT_BINARY_DIR}")
@@ -406,6 +406,7 @@
   endif(NOT Leptonica_FOUND)
   include_directories(${Leptonica_INCLUDE_DIRS})
 
+  if(NOT DISABLE_TIFF)
   check_leptonica_tiff_support()
   if ((NOT LEPT_TIFF_RESULT EQUAL 0) AND LEPT_TIFF_COMPILE_SUCCESS)
     message(NOTICE "Leptonica was build without TIFF support! Disabling TIFF support...")
@@ -413,6 +414,7 @@
   elseif(NOT ${CMAKE_VERSION} VERSION_LESS "3.25")
     message(STATUS "Leptonica was build with TIFF support.")
   endif()
+  endif()
 
   # Check for optional libraries.
   if(DISABLE_TIFF)
@@ -808,6 +810,11 @@
     PRIVATE -DTESS_EXPORTS
     INTERFACE -DTESS_IMPORTS)
   # generate_export_header          (libtesseract EXPORT_MACRO_NAME TESS_API)
+else()
+    # Enable `-fvisibility=hidden`.
+    set_target_properties(libtesseract PROPERTIES CXX_VISIBILITY_PRESET hidden)
+    # Enable `-fvisibility-inlines-hidden`.
+    set_target_properties(libtesseract PROPERTIES VISIBILITY_INLINES_HIDDEN TRUE)
 endif()
 target_link_libraries(libtesseract PRIVATE ${LIB_Ws2_32} ${LIB_pthread})
 if(OpenMP_CXX_FOUND)
@@ -829,7 +836,7 @@
                           ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
 set_target_properties(
   libtesseract PROPERTIES SOVERSION
-                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
+                          ${VERSION_MAJOR})
 
 set_target_properties(
   libtesseract
@@ -865,18 +872,20 @@
 endif()
 
 if(ANDROID)
-  add_definitions(-DANDROID)
+  add_definitions(-DANDROID -DHAVE_ANDROID_GETCPUFAMILY)
   find_package(CpuFeaturesNdkCompat REQUIRED)
   target_include_directories(
     libtesseract
     PRIVATE "${CpuFeaturesNdkCompat_DIR}/../../../include/ndk_compat")
   target_link_libraries(libtesseract PRIVATE CpuFeatures::ndk_compat)
+  set(cpu_features_LIBS "-lcpu_features -lndk_compat")
 endif()
 
 # ##############################################################################
 # EXECUTABLE tesseract
 # ##############################################################################
 
+if(FALSE)
 add_executable(tesseract src/tesseract.cpp)
 target_link_libraries(tesseract libtesseract)
 if(HAVE_TIFFIO_H AND WIN32)
@@ -886,6 +895,7 @@
 if(OPENMP_BUILD AND UNIX)
   target_link_libraries(tesseract pthread)
 endif()
+endif()
 
 # ##############################################################################
 
@@ -936,7 +936,6 @@
   FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
   RENAME tesseract.pc)
-install(TARGETS tesseract DESTINATION bin)
 if (MSVC)
   install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)
 endif()
--- i/tesseract.pc.cmake
+++ w/tesseract.pc.cmake
@@ -8,6 +8,6 @@
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @tesseract_VERSION@
 Requires.private: lept
-Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
+Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @cpu_features_LIBS@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
 Libs.private:
 Cflags: -I${includedir}


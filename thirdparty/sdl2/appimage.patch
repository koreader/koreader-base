diff --git a/CMakeLists.txt b/CMakeLists.txt
index 50f2f242a..36da88a33 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,6 +8,16 @@ set(CMAKE_POLICY_DEFAULT_CMP0091 NEW)
 cmake_minimum_required(VERSION 3.17.5)
 project(SDL2 C)
 
+execute_process(COMMAND pkg-config --variable pc_path pkg-config RESULT_VARIABLE RET OUTPUT_VARIABLE OUT OUTPUT_STRIP_TRAILING_WHITESPACE)
+if(NOT RET EQUAL 0)
+  message(FATAL_ERROR "could not get pkg-config builtin search path")
+endif()
+set(ENV{PKG_CONFIG_LIBDIR} ${OUT})
+execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpmachine RESULT_VARIABLE RET OUTPUT_VARIABLE CMAKE_LIBRARY_ARCHITECTURE OUTPUT_STRIP_TRAILING_WHITESPACE)
+if(NOT RET EQUAL 0)
+  message(FATAL_ERROR "could not get compiler target machine")
+endif()
+
 if(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
   set(SDL2_SUBPROJECT OFF)
 else()
@@ -1608,7 +1615,7 @@ elseif(UNIX AND NOT APPLE AND NOT RISCOS AND NOT HAIKU)
 
     if(PKG_CONFIG_FOUND)
       if(SDL_DBUS)
-        pkg_search_module(DBUS dbus-1 dbus)
+        pkg_search_module(DBUS REQUIRED dbus-1 dbus)
         if(DBUS_FOUND)
           set(HAVE_DBUS_DBUS_H TRUE)
           target_include_directories(sdl-build-options INTERFACE "${DBUS_INCLUDE_DIRS}")
@@ -1619,7 +1626,7 @@ elseif(UNIX AND NOT APPLE AND NOT RISCOS AND NOT HAIKU)
       endif()
 
       if(SDL_IBUS)
-        pkg_search_module(IBUS ibus-1.0 ibus)
+        pkg_search_module(IBUS REQUIRED ibus-1.0 ibus)
         find_path(HAVE_SYS_INOTIFY_H NAMES sys/inotify.h)
         if(IBUS_FOUND AND HAVE_SYS_INOTIFY_H)
           set(HAVE_IBUS_IBUS_H TRUE)
diff --git a/cmake/sdlchecks.cmake b/cmake/sdlchecks.cmake
index ea4c0ff43..eb8d484f0 100644
--- a/cmake/sdlchecks.cmake
+++ b/cmake/sdlchecks.cmake
@@ -427,6 +427,10 @@ macro(CheckX11)
   if(SDL_X11)
     foreach(_LIB X11 Xext Xcursor Xi Xfixes Xrandr Xrender Xss)
         FindLibraryAndSONAME("${_LIB}")
+        string(TOUPPER ${_LIB} _ULIB)
+        if(NOT ${_ULIB}_LIB)
+          message(FATAL_ERROR "Library ${_LIB} not found")
+        endif()
     endforeach()
 
     set(X11_dirs)
@@ -658,7 +662,7 @@ endmacro()
 macro(CheckWayland)
   if(SDL_WAYLAND)
     set(WAYLAND_FOUND FALSE)
-    pkg_check_modules(PKG_WAYLAND "wayland-client>=1.18" wayland-egl wayland-cursor egl "xkbcommon>=0.5.0")
+    pkg_check_modules(PKG_WAYLAND REQUIRED "wayland-client>=1.18" wayland-egl wayland-cursor egl "xkbcommon>=0.5.0")
 
     if(PKG_WAYLAND_FOUND)
       set(WAYLAND_FOUND TRUE)
@@ -726,7 +730,7 @@ macro(CheckWayland)
       endif()
 
       if(SDL_WAYLAND_LIBDECOR)
-        pkg_check_modules(PKG_LIBDECOR libdecor-0)
+        pkg_check_modules(PKG_LIBDECOR REQUIRED libdecor-0)
         if(PKG_LIBDECOR_FOUND)
             set(HAVE_WAYLAND_LIBDECOR TRUE)
             set(HAVE_LIBDECOR_H 1)
@@ -858,7 +862,7 @@ endmacro()
 # - PkgCheckModules
 macro(CheckEGL)
   if (SDL_OPENGL OR SDL_OPENGLES)
-    pkg_check_modules(EGL egl)
+    pkg_check_modules(EGL REQUIRED egl)
     set(CMAKE_REQUIRED_DEFINITIONS "${CMAKE_REQUIRED_DEFINITIONS} ${EGL_CFLAGS}")
     check_c_source_compiles("
         #define EGL_API_FB
@@ -1369,6 +1373,9 @@ macro(CheckLibUDev)
         set(HAVE_LIBUDEV TRUE)
       endif()
     endif()
+    if(NOT HAVE_LIBUDEV)
+      message(FATAL_ERROR "udev library not found")
+    endif()
   endif()
 endmacro()
 
